#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    Node* arr[26];
    bool flag=false;

    void insertNode(char ch)
    {
        arr[ch-'a']=new Node();
    }
    void wordEnd()
    {
        flag=true;
    }
};

class Trie
{
    public:
    Node* root;
    Trie()
    {
        root=new Node();
    }

    void insert(string s)
    {
        Node* temp=root;
        for(int i=0;i<s.size();i++)
        {
            if(temp->arr[s[i]-'a']==NULL)
            {
                temp->insertNode(s[i]);
            }
            temp=temp->arr[s[i]-'a'];
        }
        temp->wordEnd();
    }

    bool ifPresent(string s)
    {
        Node* temp=root;
        for(int i=0;i<s.size();i++)
        {
            if(temp->arr[s[i]-'a']==NULL)
            return false;
            else
            temp=temp->arr[s[i]-'a'];
        }
        return temp->flag;
    }

    bool startsWith(string s)
    {
        Node* temp=root;
        for(int i=0;i<s.size();i++)
        {
            if(temp->arr[s[i]-'a']==NULL)
            return false;
            else
            temp=temp->arr[s[i]-'a'];
        }
        if(temp!=NULL)
        return true;
        else
        return false;
    }
};

int main()
{
    Trie obj;
    Node* start=obj.root;
    obj.insert("yash");
    cout<<obj.startsWith("yas");
    return 0;
}
